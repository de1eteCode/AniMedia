@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<div class="container">
    <div class="row">
        @* Аватарка *@
        <div class="container">
            @{
                var avUid = UserState.Value.AvatarUid;
                if (avUid is not null && avUid != Guid.Empty) {
                    <img
                        width="150"
                        src=@($"{Configuration["ApiServiceUrl"]}/api/v1/media/file/{avUid}")/>
                }
                else {
                    <img
                        width="150"
                        src="resources/default_avatar.jpg"/>
                }
            }
        </div>

        @* Кнопки смены аватарки *@
        <div class="container">
            <div class="row">
                @* Кнопка выбора файла *@
                <div class="col">
                    @if (DoubleBuffer) {
                        <InputFile
                            multiple="false"
                            OnChange="LoadNewAvatarEvent"/>
                    }
                    else {
                        <InputFile
                            multiple="false"
                            OnChange="LoadNewAvatarEvent"/>
                    }
                </div>
                
                @* Кнопка загрузки файла *@
                <div class="col">
                    @if (_newAvatar != null) {
                        <button
                            class="btn btn-primary"
                            @onclick='() => UpdateAvatar()'>
                            Обновить
                        </button>
                    }
                    else {
                        <button
                            class="btn btn-primary"
                            disabled>
                            Обновить
                        </button>
                    }
                </div>
            </div>
        </div>

        @* Форма профиля *@
        <div class="col">
            <EditForm
                Model="_vmUpdateProfile"
                OnValidSubmit="@UpdateProfile">
                <DataAnnotationsValidator/>

                <p>
                    <label>
                        Firstsss name:
                        <InputText
                            id="firstName"
                            @bind-Value="_vmUpdateProfile.FirstName"
                            DisplayName="First name"/>
                    </label>
                    <ValidationMessage For="() => _vmUpdateProfile.FirstName"/>
                </p>

                <p>
                    <label>
                        Second namess:
                        <InputText
                            id="secondName"
                            @bind-Value="_vmUpdateProfile.SecondName"
                            DisplayName="Second name"/>
                    </label>
                    <ValidationMessage For="() => _vmUpdateProfile.SecondName"/>
                </p>

            </EditForm>
        </div>
    </div>
</div>